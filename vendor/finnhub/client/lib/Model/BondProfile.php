<?php
/**
 * BondProfile
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Finnhub
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Finnhub\Model;

use \ArrayAccess;
use \Finnhub\ObjectSerializer;

/**
 * BondProfile Class Doc Comment
 *
 * @category Class
 * @package  Finnhub
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class BondProfile implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'BondProfile';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'isin' => 'string',
        'cusip' => 'string',
        'figi' => 'string',
        'coupon' => 'float',
        'maturity_date' => 'string',
        'offering_price' => 'float',
        'issue_date' => 'string',
        'bond_type' => 'string',
        'debt_type' => 'string',
        'industry_group' => 'string',
        'industry_sub_group' => 'string',
        'asset' => 'string',
        'asset_type' => 'string',
        'dated_date' => 'string',
        'first_coupon_date' => 'string',
        'original_offering' => 'float',
        'amount_outstanding' => 'float',
        'payment_frequency' => 'string',
        'security_level' => 'string',
        'callable' => 'bool',
        'coupon_type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'isin' => null,
        'cusip' => null,
        'figi' => null,
        'coupon' => 'float',
        'maturity_date' => null,
        'offering_price' => 'float',
        'issue_date' => null,
        'bond_type' => null,
        'debt_type' => null,
        'industry_group' => null,
        'industry_sub_group' => null,
        'asset' => null,
        'asset_type' => null,
        'dated_date' => null,
        'first_coupon_date' => null,
        'original_offering' => 'float',
        'amount_outstanding' => 'float',
        'payment_frequency' => null,
        'security_level' => null,
        'callable' => null,
        'coupon_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'isin' => 'isin',
        'cusip' => 'cusip',
        'figi' => 'figi',
        'coupon' => 'coupon',
        'maturity_date' => 'maturityDate',
        'offering_price' => 'offeringPrice',
        'issue_date' => 'issueDate',
        'bond_type' => 'bondType',
        'debt_type' => 'debtType',
        'industry_group' => 'industryGroup',
        'industry_sub_group' => 'industrySubGroup',
        'asset' => 'asset',
        'asset_type' => 'assetType',
        'dated_date' => 'datedDate',
        'first_coupon_date' => 'firstCouponDate',
        'original_offering' => 'originalOffering',
        'amount_outstanding' => 'amountOutstanding',
        'payment_frequency' => 'paymentFrequency',
        'security_level' => 'securityLevel',
        'callable' => 'callable',
        'coupon_type' => 'couponType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'isin' => 'setIsin',
        'cusip' => 'setCusip',
        'figi' => 'setFigi',
        'coupon' => 'setCoupon',
        'maturity_date' => 'setMaturityDate',
        'offering_price' => 'setOfferingPrice',
        'issue_date' => 'setIssueDate',
        'bond_type' => 'setBondType',
        'debt_type' => 'setDebtType',
        'industry_group' => 'setIndustryGroup',
        'industry_sub_group' => 'setIndustrySubGroup',
        'asset' => 'setAsset',
        'asset_type' => 'setAssetType',
        'dated_date' => 'setDatedDate',
        'first_coupon_date' => 'setFirstCouponDate',
        'original_offering' => 'setOriginalOffering',
        'amount_outstanding' => 'setAmountOutstanding',
        'payment_frequency' => 'setPaymentFrequency',
        'security_level' => 'setSecurityLevel',
        'callable' => 'setCallable',
        'coupon_type' => 'setCouponType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'isin' => 'getIsin',
        'cusip' => 'getCusip',
        'figi' => 'getFigi',
        'coupon' => 'getCoupon',
        'maturity_date' => 'getMaturityDate',
        'offering_price' => 'getOfferingPrice',
        'issue_date' => 'getIssueDate',
        'bond_type' => 'getBondType',
        'debt_type' => 'getDebtType',
        'industry_group' => 'getIndustryGroup',
        'industry_sub_group' => 'getIndustrySubGroup',
        'asset' => 'getAsset',
        'asset_type' => 'getAssetType',
        'dated_date' => 'getDatedDate',
        'first_coupon_date' => 'getFirstCouponDate',
        'original_offering' => 'getOriginalOffering',
        'amount_outstanding' => 'getAmountOutstanding',
        'payment_frequency' => 'getPaymentFrequency',
        'security_level' => 'getSecurityLevel',
        'callable' => 'getCallable',
        'coupon_type' => 'getCouponType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['isin'] = $data['isin'] ?? null;
        $this->container['cusip'] = $data['cusip'] ?? null;
        $this->container['figi'] = $data['figi'] ?? null;
        $this->container['coupon'] = $data['coupon'] ?? null;
        $this->container['maturity_date'] = $data['maturity_date'] ?? null;
        $this->container['offering_price'] = $data['offering_price'] ?? null;
        $this->container['issue_date'] = $data['issue_date'] ?? null;
        $this->container['bond_type'] = $data['bond_type'] ?? null;
        $this->container['debt_type'] = $data['debt_type'] ?? null;
        $this->container['industry_group'] = $data['industry_group'] ?? null;
        $this->container['industry_sub_group'] = $data['industry_sub_group'] ?? null;
        $this->container['asset'] = $data['asset'] ?? null;
        $this->container['asset_type'] = $data['asset_type'] ?? null;
        $this->container['dated_date'] = $data['dated_date'] ?? null;
        $this->container['first_coupon_date'] = $data['first_coupon_date'] ?? null;
        $this->container['original_offering'] = $data['original_offering'] ?? null;
        $this->container['amount_outstanding'] = $data['amount_outstanding'] ?? null;
        $this->container['payment_frequency'] = $data['payment_frequency'] ?? null;
        $this->container['security_level'] = $data['security_level'] ?? null;
        $this->container['callable'] = $data['callable'] ?? null;
        $this->container['coupon_type'] = $data['coupon_type'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets isin
     *
     * @return string|null
     */
    public function getIsin()
    {
        return $this->container['isin'];
    }

    /**
     * Sets isin
     *
     * @param string|null $isin ISIN.
     *
     * @return self
     */
    public function setIsin($isin)
    {
        $this->container['isin'] = $isin;

        return $this;
    }

    /**
     * Gets cusip
     *
     * @return string|null
     */
    public function getCusip()
    {
        return $this->container['cusip'];
    }

    /**
     * Sets cusip
     *
     * @param string|null $cusip Cusip.
     *
     * @return self
     */
    public function setCusip($cusip)
    {
        $this->container['cusip'] = $cusip;

        return $this;
    }

    /**
     * Gets figi
     *
     * @return string|null
     */
    public function getFigi()
    {
        return $this->container['figi'];
    }

    /**
     * Sets figi
     *
     * @param string|null $figi FIGI.
     *
     * @return self
     */
    public function setFigi($figi)
    {
        $this->container['figi'] = $figi;

        return $this;
    }

    /**
     * Gets coupon
     *
     * @return float|null
     */
    public function getCoupon()
    {
        return $this->container['coupon'];
    }

    /**
     * Sets coupon
     *
     * @param float|null $coupon Coupon.
     *
     * @return self
     */
    public function setCoupon($coupon)
    {
        $this->container['coupon'] = $coupon;

        return $this;
    }

    /**
     * Gets maturity_date
     *
     * @return string|null
     */
    public function getMaturityDate()
    {
        return $this->container['maturity_date'];
    }

    /**
     * Sets maturity_date
     *
     * @param string|null $maturity_date Period.
     *
     * @return self
     */
    public function setMaturityDate($maturity_date)
    {
        $this->container['maturity_date'] = $maturity_date;

        return $this;
    }

    /**
     * Gets offering_price
     *
     * @return float|null
     */
    public function getOfferingPrice()
    {
        return $this->container['offering_price'];
    }

    /**
     * Sets offering_price
     *
     * @param float|null $offering_price Offering price.
     *
     * @return self
     */
    public function setOfferingPrice($offering_price)
    {
        $this->container['offering_price'] = $offering_price;

        return $this;
    }

    /**
     * Gets issue_date
     *
     * @return string|null
     */
    public function getIssueDate()
    {
        return $this->container['issue_date'];
    }

    /**
     * Sets issue_date
     *
     * @param string|null $issue_date Issue date.
     *
     * @return self
     */
    public function setIssueDate($issue_date)
    {
        $this->container['issue_date'] = $issue_date;

        return $this;
    }

    /**
     * Gets bond_type
     *
     * @return string|null
     */
    public function getBondType()
    {
        return $this->container['bond_type'];
    }

    /**
     * Sets bond_type
     *
     * @param string|null $bond_type Bond type.
     *
     * @return self
     */
    public function setBondType($bond_type)
    {
        $this->container['bond_type'] = $bond_type;

        return $this;
    }

    /**
     * Gets debt_type
     *
     * @return string|null
     */
    public function getDebtType()
    {
        return $this->container['debt_type'];
    }

    /**
     * Sets debt_type
     *
     * @param string|null $debt_type Bond type.
     *
     * @return self
     */
    public function setDebtType($debt_type)
    {
        $this->container['debt_type'] = $debt_type;

        return $this;
    }

    /**
     * Gets industry_group
     *
     * @return string|null
     */
    public function getIndustryGroup()
    {
        return $this->container['industry_group'];
    }

    /**
     * Sets industry_group
     *
     * @param string|null $industry_group Industry.
     *
     * @return self
     */
    public function setIndustryGroup($industry_group)
    {
        $this->container['industry_group'] = $industry_group;

        return $this;
    }

    /**
     * Gets industry_sub_group
     *
     * @return string|null
     */
    public function getIndustrySubGroup()
    {
        return $this->container['industry_sub_group'];
    }

    /**
     * Sets industry_sub_group
     *
     * @param string|null $industry_sub_group Sub-Industry.
     *
     * @return self
     */
    public function setIndustrySubGroup($industry_sub_group)
    {
        $this->container['industry_sub_group'] = $industry_sub_group;

        return $this;
    }

    /**
     * Gets asset
     *
     * @return string|null
     */
    public function getAsset()
    {
        return $this->container['asset'];
    }

    /**
     * Sets asset
     *
     * @param string|null $asset Asset.
     *
     * @return self
     */
    public function setAsset($asset)
    {
        $this->container['asset'] = $asset;

        return $this;
    }

    /**
     * Gets asset_type
     *
     * @return string|null
     */
    public function getAssetType()
    {
        return $this->container['asset_type'];
    }

    /**
     * Sets asset_type
     *
     * @param string|null $asset_type Asset.
     *
     * @return self
     */
    public function setAssetType($asset_type)
    {
        $this->container['asset_type'] = $asset_type;

        return $this;
    }

    /**
     * Gets dated_date
     *
     * @return string|null
     */
    public function getDatedDate()
    {
        return $this->container['dated_date'];
    }

    /**
     * Sets dated_date
     *
     * @param string|null $dated_date Dated date.
     *
     * @return self
     */
    public function setDatedDate($dated_date)
    {
        $this->container['dated_date'] = $dated_date;

        return $this;
    }

    /**
     * Gets first_coupon_date
     *
     * @return string|null
     */
    public function getFirstCouponDate()
    {
        return $this->container['first_coupon_date'];
    }

    /**
     * Sets first_coupon_date
     *
     * @param string|null $first_coupon_date First coupon date.
     *
     * @return self
     */
    public function setFirstCouponDate($first_coupon_date)
    {
        $this->container['first_coupon_date'] = $first_coupon_date;

        return $this;
    }

    /**
     * Gets original_offering
     *
     * @return float|null
     */
    public function getOriginalOffering()
    {
        return $this->container['original_offering'];
    }

    /**
     * Sets original_offering
     *
     * @param float|null $original_offering Offering amount.
     *
     * @return self
     */
    public function setOriginalOffering($original_offering)
    {
        $this->container['original_offering'] = $original_offering;

        return $this;
    }

    /**
     * Gets amount_outstanding
     *
     * @return float|null
     */
    public function getAmountOutstanding()
    {
        return $this->container['amount_outstanding'];
    }

    /**
     * Sets amount_outstanding
     *
     * @param float|null $amount_outstanding Outstanding amount.
     *
     * @return self
     */
    public function setAmountOutstanding($amount_outstanding)
    {
        $this->container['amount_outstanding'] = $amount_outstanding;

        return $this;
    }

    /**
     * Gets payment_frequency
     *
     * @return string|null
     */
    public function getPaymentFrequency()
    {
        return $this->container['payment_frequency'];
    }

    /**
     * Sets payment_frequency
     *
     * @param string|null $payment_frequency Payment frequency.
     *
     * @return self
     */
    public function setPaymentFrequency($payment_frequency)
    {
        $this->container['payment_frequency'] = $payment_frequency;

        return $this;
    }

    /**
     * Gets security_level
     *
     * @return string|null
     */
    public function getSecurityLevel()
    {
        return $this->container['security_level'];
    }

    /**
     * Sets security_level
     *
     * @param string|null $security_level Security level.
     *
     * @return self
     */
    public function setSecurityLevel($security_level)
    {
        $this->container['security_level'] = $security_level;

        return $this;
    }

    /**
     * Gets callable
     *
     * @return bool|null
     */
    public function getCallable()
    {
        return $this->container['callable'];
    }

    /**
     * Sets callable
     *
     * @param bool|null $callable Callable.
     *
     * @return self
     */
    public function setCallable($callable)
    {
        $this->container['callable'] = $callable;

        return $this;
    }

    /**
     * Gets coupon_type
     *
     * @return string|null
     */
    public function getCouponType()
    {
        return $this->container['coupon_type'];
    }

    /**
     * Sets coupon_type
     *
     * @param string|null $coupon_type Coupon type.
     *
     * @return self
     */
    public function setCouponType($coupon_type)
    {
        $this->container['coupon_type'] = $coupon_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


